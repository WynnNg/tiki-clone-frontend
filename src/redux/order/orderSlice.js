import { createSlice } from "@reduxjs/toolkit";
import { message } from "antd";

const initialState = {
  cart: [],
};

export const orderSlice = createSlice({
  name: "order",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    doAddToCart: (state, action) => {
      const isIndexExist = state.cart.findIndex(
        (item) => item.id === action.payload.id
      );
      if (isIndexExist > -1) {
        state.cart[isIndexExist].quantity =
          action.payload.quantity + state.cart[isIndexExist].quantity;
        if (
          state.cart[isIndexExist].quantity > action.payload.detail.quantity
        ) {
          state.cart[isIndexExist].quantity = action.payload.detail.quantity;
        }
      } else {
        state.cart.push(action.payload);
        message.success("Thêm sản phẩm vào giỏ hàng thành công!");
      }
    },
    doUpdateCart: (state, action) => {
      const index = state.cart.findIndex(
        (item) => item.id === action.payload.id
      );

      if (index > -1) {
        state.cart[index].quantity = action.payload.quantity;
        if (state.cart[index].quantity > action.payload.bookQuantity) {
          state.cart[index].quantity = action.payload.bookQuantity;
        }
      }
    },
    doDeleteItem: (state, action) => {
      state.cart = state.cart.filter((item) => item.id !== action.payload);
      message.success("Xóa sản phẩm thành công!");
    },
    doResetCart: (state) => {
      state.cart = [];
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

export const { doAddToCart, doUpdateCart, doDeleteItem, doResetCart } =
  orderSlice.actions;

export default orderSlice.reducer;
